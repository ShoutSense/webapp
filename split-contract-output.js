const glob = require("glob");
const fs = require("fs");
const jsonfile = require('jsonfile')
const path = require('path');
const copydir = require('copy-dir');
const exec = require('child_process').execSync;

const inputBuildDir = 'build/contracts/';
const outputBuildDir = 'build/contracts-raw/';
const outputWrapperDir = 'build/contract-wrappers/';
const localUserWorkspaceDir = '/Users/radarcg/Dropbox/Development/eclipse_workspace';
const outputWrapperDirFinal = localUserWorkspaceDir + '/ShoutSense/src/main/java-autogenerated';
const javaPackageName = 'com.shoutsense.blockchain.contracts'

module.exports = function(callback) {

  const files = glob.sync(inputBuildDir + '*.json');
  for (const filename of files) {
    console.log('processing contract at ' + filename);
    const contractJson = jsonfile.readFileSync(filename);
    const contractName = path.basename(filename, '.json');
    const abi = contractJson.abi;
    if (abi.length > 0) {
      const bin = contractJson.unlinked_binary;
      const abiFile = outputBuildDir + contractName + '.abi';
      const binFile = outputBuildDir + contractName + '.bin';
      jsonfile.writeFileSync(abiFile, abi)
      fs.writeFileSync(binFile, bin)
      const wrapperCommand = 'web3j solidity generate ' + binFile + ' ' + abiFile + ' -o ' + outputWrapperDir + ' -p ' + javaPackageName;
      exec(wrapperCommand, function (err, stdout, stderr) {
        console.log(wrapperCommand);
      });
    }
  }
  copydir.sync(outputWrapperDir, outputWrapperDirFinal);
  console.log('done');
  process.exit();
}
